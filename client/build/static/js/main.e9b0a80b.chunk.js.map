{"version":3,"sources":["components/MyNav.js","helpers/useForm.js","components/Logs.js","constants.js","components/LoginTab.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","NavbarText","target","to","useForm","initialValues","values","setValues","e","name","value","WithSuspense","user","passcode","handleChange","logged","setLogged","title","columns","defaultHiddenColumnNames","columnName","width","defaultColumnWidths","pageSizes","useFetch","data","get","loadData","a","useEffect","logIn","preventDefault","process","listener","event","code","document","addEventListener","removeEventListener","Container","style","display","flexDirection","justifyContent","alignContent","alignSelf","margin","Row","Col","xs","Form","onSubmit","Input","type","placeholder","onChange","Button","block","sm","length","Paper","rows","map","x","Object","assign","id","_id","dateSubmitted","dateConfirmed","studentFirst","formSubmitted","submission","studentLast","studentEmail","proctorName","proctorEmail","classCodeSelected","testNumberSelected","tranformData","defaultCurrentPage","defaultPageSize","defaultValue","defaultSorting","direction","showSortingControls","url","height","fallback","LoginTab","classes","this","className","padding","Grid","container","spacing","alignItems","item","Face","md","TextField","label","fullWidth","autoFocus","required","Fingerprint","justify","FormControlLabel","control","Checkbox","disableFocusRipple","disableRipple","textTransform","variant","marginTop","React","Component","App","withStyles","theme","unit","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9b0a80b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    // Nav,\r\n    // NavItem,\r\n    // NavLink,\r\n    // UncontrolledDropdown,\r\n    // DropdownToggle,\r\n    // DropdownMenu,\r\n    // DropdownItem,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\nconst MyNav = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">CBTS PRF</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    {/* <Nav className=\"mr-auto\" navbar>\r\n                        <UncontrolledDropdown nav inNavbar>\r\n                            <DropdownToggle nav caret>\r\n                                Options\r\n              </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem>\r\n                                    Option 1\r\n                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    Option 2\r\n                </DropdownItem>\r\n                                <DropdownItem divider />\r\n                                <DropdownItem>\r\n                                    Reset\r\n                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav> */}\r\n\r\n                    <NavbarText ><Link target=\"_blank\" to={\"//cbtseminary.org/password-request-form/\"}>Request Form</Link></NavbarText>\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(MyNav);","import { useState } from \"react\";\r\n\r\nconst useForm = initialValues => {\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    return [\r\n        values,\r\n        e => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    ];\r\n};\r\nexport default useForm;","import React, { useState, useEffect, Suspense } from 'react';\r\nimport { useFetch, Provider } from \"use-http\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    SearchState,\r\n    IntegratedFiltering,\r\n    IntegratedSorting,\r\n    SortingState,\r\n    PagingState,\r\n    IntegratedPaging,\r\n} from '@devexpress/dx-react-grid';\r\nimport {\r\n    Grid,\r\n    Table,\r\n    Toolbar,\r\n    SearchPanel,\r\n    TableHeaderRow,\r\n    TableColumnResizing,\r\n    TableColumnVisibility,\r\n    PagingPanel,\r\n} from '@devexpress/dx-react-grid-material-ui';\r\nimport { Container, Input, Form, Row, Col, Button } from 'reactstrap';\r\n\r\nimport useForm from '../helpers/useForm'\r\nimport { queryDomain } from '../constants';\r\n\r\nconst WithSuspense = () => {\r\n    const [user, handleChange] = useForm({\r\n        user: \"\",\r\n        passcode: \"\"\r\n    });\r\n    const [logged, setLogged] = useState(false)\r\n    const [columns] = useState([\r\n        { name: 'id', title: 'ID' },\r\n        { name: 'studentLast', title: 'Last name' },\r\n        { name: 'studentFirst', title: 'First name' },\r\n        { name: 'studentEmail', title: 'Student Email' },\r\n        { name: 'proctorName', title: 'ProctorName' },\r\n        { name: 'proctorEmail', title: 'Proctor Email' },\r\n        { name: 'classCodeSelected', title: 'Class' },\r\n        { name: 'testNumberSelected', title: 'Test/Quiz' },\r\n        { name: 'confirmed', title: 'Confirmed' },\r\n        { name: 'dateConfirmed', title: 'Status' },\r\n        { name: 'dateSubmitted', title: 'Date' },\r\n    ]);\r\n    const [defaultHiddenColumnNames] = useState([\"id\"]);\r\n    const [defaultColumnWidths] = useState([\r\n        { columnName: 'id', width: 180 },\r\n        { columnName: 'studentLast', width: 250 },\r\n        { columnName: 'studentFirst', width: 120 },\r\n        { columnName: 'studentEmail', width: 240 },\r\n        { columnName: 'proctorName', width: 180, },\r\n        { columnName: 'proctorEmail', width: 240, },\r\n        { columnName: 'classCodeSelected', width: 90, },\r\n        { columnName: 'testNumberSelected', width: 90, },\r\n        { columnName: 'confirmed', width: 90 },\r\n        { columnName: 'dateConfirmed', width: 220 },\r\n        { columnName: 'dateSubmitted', width: 220 },\r\n    ]);\r\n    const [pageSizes] = useState([25, 50, 75, 0]);\r\n    const tranformData = (data) => {\r\n        return data.map(x => Object.assign({\r\n            id: x._id,\r\n            dateSubmitted: x.dateSubmitted,\r\n            dateConfirmed: x.dateConfirmed,\r\n            studentFirst: x.formSubmitted.submission.studentFirst,\r\n            studentLast: x.formSubmitted.submission.studentLast,\r\n            studentEmail: x.formSubmitted.submission.studentEmail,\r\n            proctorName: x.formSubmitted.submission.proctorName,\r\n            proctorEmail: x.formSubmitted.submission.proctorEmail,\r\n            classCodeSelected: x.formSubmitted.submission.classCodeSelected,\r\n            testNumberSelected: x.formSubmitted.submission.testNumberSelected,\r\n        }, x))\r\n    }\r\n    const { get, data } = useFetch({ data: [] });\r\n\r\n    const loadData = async () => get(`/api/courses/confirm/`);\r\n    useEffect(() => {\r\n        loadData()\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const logIn = (e) => {\r\n        e.preventDefault()\r\n        user.user === process.env.REACT_APP_USERNAME && user.passcode === process.env.REACT_APP_PASSCODE ? setLogged(true) : setLogged(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n    }, [user])\r\n    useEffect(() => {\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                logIn(event);\r\n                return\r\n            }\r\n        };\r\n        document.addEventListener(\"keydown\", listener);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", listener);\r\n        };\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            {!logged && (<Container style={{ display: \"flex\", flexDirection: 'column', justifyContent: 'center', alignContent: 'center', alignSelf: \"center\", margin: '20px auto' }}>\r\n                <Row>\r\n                    <Col xs=\"3\">\r\n                        <Form onSubmit={(e) => logIn(e)}>\r\n                            <Input type='text' placeholder={`Username`} name={`user`} value={user.user} onChange={handleChange} />\r\n                            <Input type='password' placeholder={`Password`} name={`passcode`} value={user.passcode} onChange={handleChange} />\r\n                            <Button block sm={`true`} onClick={(e) => logIn(e)}>Login</Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>)}\r\n            {logged && data.length > 0 && (\r\n                <>\r\n                    <Button block sm={`true`} onClick={() => setLogged(false)}>Logout</Button>\r\n                    <Paper>\r\n                        <Grid rows={tranformData(data)} columns={columns}>\r\n                            <PagingState\r\n                                defaultCurrentPage={0}\r\n                                defaultPageSize={25}\r\n                            />\r\n                            <SearchState defaultValue=\"\" />\r\n                            <IntegratedFiltering />\r\n                            <SortingState\r\n                                defaultSorting={[{ columnName: 'id', direction: 'desc' }]}\r\n                            />\r\n                            <IntegratedSorting />\r\n                            <IntegratedPaging />\r\n                            <Table />\r\n                            <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\r\n                            <TableHeaderRow showSortingControls />\r\n                            <TableColumnVisibility\r\n                                defaultHiddenColumnNames={defaultHiddenColumnNames}\r\n                            />\r\n\r\n                            <Toolbar />\r\n                            <SearchPanel />\r\n                            <PagingPanel\r\n                                pageSizes={pageSizes}\r\n                            />\r\n                        </Grid>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Logs = () => {\r\n\r\n\r\n    return (\r\n        // <Provider url={`${process.env.REACT_APP_PROXY}`}>\r\n        <Provider url={queryDomain}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center !important', alignContent: 'center !important' }}>\r\n                <div style={{ height: '800px', width: '100%' }}>\r\n                    <Suspense fallback='Loading...'>\r\n                        <WithSuspense />\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        </Provider>\r\n\r\n    );\r\n};\r\n\r\nexport default withRouter(Logs)","export const queryDomain = `https://prf.cbtseminary.com`","import React from 'react';\r\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox } from '@material-ui/core';\r\nimport { Face, Fingerprint } from '@material-ui/icons'\r\nconst styles = theme => ({\r\n    margin: {\r\n        margin: theme.spacing.unit * 2,\r\n    },\r\n    padding: {\r\n        padding: theme.spacing.unit\r\n    }\r\n});\r\n\r\nclass LoginTab extends React.Component {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Paper className={classes.padding}>\r\n                <div className={classes.margin}>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Face />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"username\" label=\"Username\" type=\"email\" fullWidth autoFocus required />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={8} alignItems=\"flex-end\">\r\n                        <Grid item>\r\n                            <Fingerprint />\r\n                        </Grid>\r\n                        <Grid item md={true} sm={true} xs={true}>\r\n                            <TextField id=\"password\" label=\"Password\" type=\"password\" fullWidth required />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container alignItems=\"center\" justify=\"space-between\">\r\n                        <Grid item>\r\n                            <FormControlLabel control={\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                />\r\n                            } label=\"Remember me\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\r\n                        <Button variant=\"outlined\" color=\"primary\" style={{ textTransform: \"none\" }}>Login</Button>\r\n                    </Grid>\r\n                </div>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(LoginTab);","import { React } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './styles.css';\nimport MyNav from './components/MyNav';\nimport Logs from './components/Logs';\nimport LoginTab from './components/LoginTab';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <MyNav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Logs />\n        </Route>\n        {/* <Route path=\"/about\">\n          <LoginTab />\n        </Route> */}\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@devexpress/dx-react-grid-bootstrap4/dist/dx-react-grid-bootstrap4.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}